{"remainingRequest":"/Users/jmason/free-code-spring-demo/client/node_modules/babel-loader/lib/index.js!/Users/jmason/free-code-spring-demo/client/node_modules/eslint-loader/index.js??ref--13-0!/Users/jmason/free-code-spring-demo/client/src/Api.js","dependencies":[{"path":"/Users/jmason/free-code-spring-demo/client/src/Api.js","mtime":1586277251465},{"path":"/Users/jmason/free-code-spring-demo/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jmason/free-code-spring-demo/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jmason/free-code-spring-demo/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIFNFUlZFUl9VUkwgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS92MSc7CnZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgYmFzZVVSTDogU0VSVkVSX1VSTCwKICB0aW1lb3V0OiAxMDAwCn0pOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0QWxsOiBmdW5jdGlvbiBnZXRBbGwoKSB7CiAgICByZXR1cm4gaW5zdGFuY2UuZ2V0KCdwZXJzb24nLCB7CiAgICAgIHRyYW5zZm9ybVJlc3BvbnNlOiBbZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICByZXR1cm4gZGF0YSA/IEpTT04ucGFyc2UoZGF0YSkgOiBkYXRhOwogICAgICB9XQogICAgfSk7CiAgfSwKICBnZXRCeUlkOiBmdW5jdGlvbiBnZXRCeUlkKHBlcnNvbklkKSB7CiAgICByZXR1cm4gaW5zdGFuY2UuZ2V0KCdwZXJzb24vJyArIHBlcnNvbklkKTsKICB9Cn07"},{"version":3,"sources":["/Users/jmason/free-code-spring-demo/client/src/Api.js"],"names":["axios","SERVER_URL","instance","create","baseURL","timeout","getAll","get","transformResponse","data","JSON","parse","getById","personId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,UAAU,GAAG,8BAAnB;AAEA,IAAMC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC5BC,EAAAA,OAAO,EAAEH,UADmB;AAE5BI,EAAAA,OAAO,EAAE;AAFmB,CAAb,CAAjB;AAKA,eAAe;AACbC,EAAAA,MAAM,EAAE;AAAA,WAAMJ,QAAQ,CAACK,GAAT,CAAa,QAAb,EAAuB;AACnCC,MAAAA,iBAAiB,EAAE,CAAC,UAAUC,IAAV,EAAgB;AAClC,eAAOA,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAH,GAAsBA,IAAjC;AACD,OAFkB;AADgB,KAAvB,CAAN;AAAA,GADK;AAMbG,EAAAA,OAAO,EAAE,iBAACC,QAAD;AAAA,WAAcX,QAAQ,CAACK,GAAT,CAAa,YAAYM,QAAzB,CAAd;AAAA;AANI,CAAf","sourcesContent":["import axios from 'axios';\n\nconst SERVER_URL = 'http://localhost:8080/api/v1';\n\nconst instance = axios.create({\n  baseURL: SERVER_URL,\n  timeout: 1000\n});\n\nexport default {\n  getAll: () => instance.get('person', {\n    transformResponse: [function (data) {\n      return data ? JSON.parse(data) : data;\n    }]\n  }),\n  getById: (personId) => instance.get('person/' + personId)\n}"]}]}